import { searchParams } from "@/lib/searchparams";
import { useQueryState } from "nuqs";
import { useCallback, useMemo } from "react";

export const SEVERITY_OPTIONS = [
  { value: "critical", label: "Critical" },
  { value: "high", label: "High" },
  { value: "medium", label: "Medium" },
  { value: "low", label: "Low" },
];

export function useVulnerabilityTableFilters() {
  const [searchQuery, setSearchQuery] = useQueryState(
    "q",
    searchParams.q
      .withOptions({ shallow: false, throttleMs: 1000 })
      .withDefault("")
  );

  const [severityFilter, setSeverityFilter] = useQueryState(
    "severity",
    searchParams.severity.withOptions({ shallow: false }).withDefault("")
  );

  const [page, setPage] = useQueryState(
    "page",
    searchParams.page.withDefault(1)
  );

  const resetFilters = useCallback(() => {
    setSearchQuery(null);
    setSeverityFilter(null);

    setPage(1);
  }, [setSearchQuery, setSeverityFilter, setPage]);

  const isAnyFilterActive = useMemo(() => {
    return !!searchQuery || !!severityFilter;
  }, [searchQuery, severityFilter]);

  return {
    searchQuery,
    setSearchQuery,
    severityFilter,
    setSeverityFilter,
    page,
    setPage,
    resetFilters,
    isAnyFilterActive,
  };
}
